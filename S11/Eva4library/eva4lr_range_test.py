# -*- coding: utf-8 -*-
"""Eva4_S11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cxO7IIMZHEfPB3rfEEIUjd04cvUmPFHe
"""
def lr_range_test():
	from torchvision import datasets
	train=datasets.CIFAR10("./data",train=True,download=True)
	from tqdm import tqdm_notebook
	from PIL import Image
	a=255
	import numpy as np
	n=0
	s=np.zeros(3)
	sq=np.zeros(3)
	for data,l in tqdm_notebook(train):
		x=np.array(data)/a
		s+=x.sum(axis=(0,1))
		sq+=np.sum(np.square(x),axis=(0,1))
		n+=x.shape[0]*x.shape[1]
	mu=s/n
	std=np.sqrt((sq/n-np.square(mu)))
	nms=[mu,std]
	import numpy as np
	from eva4albumentations import Albumentations
	a,b=40,3
	b=32
	c=(1,8,8,True)
	p=(a,a,4,None,None,True)
	rc=(b,b,True)
	test_transforms=Albumentations(nms)
	train_transforms=Albumentations(nms,Padding=p,RandomCrop=rc,HorizontalFlip=True,cutout=c)
	train=datasets.CIFAR10("./data",train=True,download=True,transform=train_transforms)
	test=datasets.CIFAR10("./data",train=False,download=True,transform=test_transforms)
	class_names=["airplane","automobile","bird","cat","deer","dog","frog","horse","ship","truck"]
	import eva4dataloaders
	batch_size=512
	dataloader=eva4dataloaders.DataLoader(batch_size=batch_size)
	train_loader=dataloader.load(train)
	test_loader=dataloader.load(test)
	import eva4models11
	model=eva4models11.ResNetforS11(device="cuda").to("cuda")
	from eva4statsmanager import StatsManager
	statsmanager=StatsManager()
	import torch.optim as optim
	from torch.optim.lr_scheduler import StepLR
	L2lambda=0
	L1lambda=0
	optimizer=optim.SGD(model.parameters(),lr=0.0001,momentum=0.9,nesterov=True,weight_decay=L2lambda)
	EPOCHS=30
	scheduler=StepLR(optimizer,step_size=1,gamma=1.4)
	model.gotrain(optimizer,train_loader,test_loader,EPOCHS,"/content/drive/My Drive",statsmanager,scheduler,False,L1lambda)
	statsmanager.plot_lr_accuracies()
	return statsmanager.give_max_lr()